apiVersion: apps/v1
kind: Deployment
metadata:
  name: "goserver"
  labels:
    app: "goserver"
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "webcaju/go-kube"
          # Recursos
          resources:
            requests:
              cpu: "0.05"
              memory: 20Mi
            limits:
              cpu: "0.05"
              memory: 25Mi
          # Startup verifica apenas no start
          startupProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 30
          # Readiness sempre verifica se esta ready
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 1
            # initialDelaySeconds: 10
          # LivenessProbe HTTP, TCP e Command
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 1
            successThreshold: 1
            # initialDelaySeconds: 15
          # ENVs
          # env:
          #   - name: NAME
          #     value: "Caju"
          #   - name: AGE
          #     value: "41"

          # ENVs configmap
          # env:
          #   - name: NAME
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: NAME
          #   - name: AGE
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: AGE

          # ENVs configmap
          # envFrom:
          #   - configMapRef:
          #       name: goserver-env

      # ENVs configmap Volumes
          envFrom:
            - configMapRef:
                name: goserver-env
            # SECRET
            - secretRef:
                name: goserver-secret
          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config
              readOnly: true
            - mountPath: "/go/pvc"
              name: goserver-persistent-volume-claim
      volumes:
        - name: goserver-persistent-volume-claim
          persistentVolumeClaim:
            claimName: goserver-persistent-volume-claim
        - name: config
          configMap:
            name: configmap-family
            items:
              - key: members
                path: "family.txt"
